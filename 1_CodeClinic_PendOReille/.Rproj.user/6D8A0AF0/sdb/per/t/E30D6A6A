{
    "contents" : "GetPendOreille <- function(startDate,endDate) {\n  # startDate and endDate are in the format YYYYMMDD\n  # Uses lubridate package for assistance with dates\n  # lubridate documentation at http://cran.r-project.org/web/packages/lubridate/lubridate.pdf\n  \n  # requires this external function\n  if(!exists(\"GetPORDataFor\",mode=\"function\")) source(\"GetPORDataFor.R\")\n  \n  # check input for validity\n  the.start.date <- ymd(startDate)\n  the.end.date <- ymd(endDate)\n  if (the.start.date > the.end.date) {\n    # Error: the end date is earlier than the start date\n    stop(\"Invalid input: start date is after end date\")\n  }\n  \n  if (the.start.date < ymd(\"20010112\")) {\n    # Error: Lake Pend Oreille didn't record any data prior to 2001_01_12\n    stop(\"No Data available prior to 2001\")\n  }\n  if (the.end.date > now()) {\n    # Error: input is asking for data for tomorrow\n    stop(\"End Date is later than today\")\n  }\n  \n  # Now I'm confident the input is usable.\n  # Based on the input, I'm going to grab the data I need\n  por.weather.data <- data.frame(theDateTime=as.numeric(),\n                                 Wind_Speed=as.numeric(),\n                                 Air_Temp=as.numeric(),\n                                 Barometric_Press=as.numeric()\n  )\n  \n  # raw data for deep moor is found at http://lpo.dt.navy.mil/data/DM/\n  kPORDeepMoorPath <- \"http://lpo.dt.navy.mil/data/DM/\"\n  \n  # date.pointer keeps track of what dates have been read\n  date.pointer <- the.start.date \n  \n  while (date.pointer <= the.end.date) {\n    if (year(date.pointer) < 2010) {\n      # prior to 2011, data was stored in one file per year\n      file.to.read <- paste(kPORDeepMoorPath,\"Environmental_Data_\",year(date.pointer),\".txt\",sep=\"\")\n      # date,time,Wind_Speed,Air_Temp,Barometric_Press\n      tmp.wd <- read.table(file.to.read,sep=\"\\t\",header=TRUE)\n      \n      # drop unneeded columns\n      tmp.wd[c(\"Wind_Gust\",\"Wind_Dir\",\"Relative_Humidity\",\n               \"Water_Temp\",\"Water_Temp_50\",\"Water_Temp_100\",\n               \"Water_Temp_200\",\"Water_Temp_400\")] <- list(NULL)\n      \n      # clean up date time column\n      colnames(tmp.wd)[1] <- \"theDateTime\" \n      \n      # merge the two data.frames\n      por.weather.data <- rbind(por.weather.data,tmp.wd)\n      \n    } else {\n      # after and including 2010, data is stored in separate files in a directory\n      \n      # get the three data tables and combine into creating.weather.df\n      get.these.weathers <- c(\"Wind_Speed\",\"Air_Temp\",\"Barometric_Press\")\n      \n      for(aWeather in get.these.weathers) {\n        temp.weather.data <- GetPORDataFor(aWeather,date.pointer)\n        temp.weather.data <- data.frame(paste(temp.weather.data$V1,temp.weather.data$V2),\n                                        temp.weather.data$V3)\n        colnames(temp.weather.data) <- c(\"theDateTime\",aWeather)\n        \n        if(!exists(\"creating.weather.df\")) {\n          creating.weather.df <- temp.weather.data\n        } else {\n          creating.weather.df <- merge(creating.weather.df,temp.weather.data,by=\"theDateTime\")\n        }\n      }\n      \n      # append creating.weather.df to por.weather.data \n      por.weather.data <- rbind(por.weather.data,creating.weather.df)\n      \n      # clear creating.weather.df\n      rm(creating.weather.df)      \n    }\n    \n    # increment date.pointer\n    # if the.end.date < 2009 then it is ok to increment by a year\n    # else, increment by a day\n\n    if (year(the.end.date) < 2009) {\n      year(date.pointer) <- year(date.pointer) + 1\n    } else {\n      # set the date pointer to do the next day\n      date.pointer <- date.pointer + days(1)\n    }\n    \n  }\n  \n  # in some cases there will be unwanted data rows at top and/or bottom. \n  # Need to trim them out\n  por.weather.data <- por.weather.data[as.POSIXlt(ymd_hms(por.weather.data$theDateTime)) >= the.start.date,]\n  por.weather.data <- por.weather.data[as.POSIXlt(ymd_hms(por.weather.data$theDateTime)) <= the.end.date,]\n  \n  # calculate the mean and median of the \n  # wind speed, air temperature and barometric pressure \n  # recorded at the deep moor station \n  # for a given range of dates\n  # summary(por.weather.data)\n  Mean <- sapply(por.weather.data[2:4], mean, na.rm = TRUE)\n  Median <- sapply(por.weather.data[2:4], median, na.rm = TRUE)\n  rbind(Mean,Median)\n}\n",
    "created" : 1416810135007.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3924284453",
    "id" : "E30D6A6A",
    "lastKnownWriteTime" : 1416984180,
    "path" : "~/git/Code_Clinic_for_R/1_CodeClinic_PendOReille/getpendoreille.R",
    "project_path" : "getpendoreille.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}